<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Jonny Reeves - Jonny Reeves</title><link>https://jonnyreeves.co.uk/</link><description>code &amp;&amp; coffee || music</description><lastBuildDate>Sun, 04 Nov 2018 18:00:00 +0000</lastBuildDate><item><title>Continuous Delivery on Github Projects to NPM using Travis</title><link>https://jonnyreeves.co.uk/2018/continuous-delivery-on-github-projects-to-npm-using-travis/</link><description>&lt;p&gt;Continuous Delivery workflows allow you to get changes out to your end users faster. Enabling Continuous Delivery for JavaScript projects hosted on Github will result in others being able to try out changes as soon as a pull request is merged into master without having to wait for the next …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sun, 04 Nov 2018 18:00:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2018-11-04:/2018/continuous-delivery-on-github-projects-to-npm-using-travis/</guid></item><item><title>Wordpress on a Google Compute Engine f1-micro</title><link>https://jonnyreeves.co.uk/2016/wordpress-on-a-google-compute-engine-f1-micro/</link><description>&lt;p&gt;The cheapest offering on &lt;a href="https://cloud.google.com/"&gt;Google's cloud platform&lt;/a&gt; is the f1-micro instance.  The f1-micro is a shared core machine which provides access to a single, virtualised CPU core (with burst capability to help with sudden load spikes) and a meagre 0.6GB of memory: these specs don't sound great, but it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Tue, 04 Oct 2016 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2016-10-04:/2016/wordpress-on-a-google-compute-engine-f1-micro/</guid></item><item><title>Configuring my Windows 10 Home Server</title><link>https://jonnyreeves.co.uk/2016/configuring-my-windows-10-home-server/</link><description>&lt;p&gt;I used to run Linux on various small NAS devices (most recently a &lt;a href="http://www.dlink.com/uk/en/support/product/dns-320-2-bay-sharecenter-network-storage-enclosure"&gt;D-Link DNS 320&lt;/a&gt; 2 bay device), however I got tired of futzing around with both the hardware and the &lt;a href="https://nas-tweaks.net/371/hdd-installation-of-the-fun_plug-0-7-on-nas-devices/"&gt;esoteric flavor of Linux&lt;/a&gt; you can side-load onto it.  I now run a small &lt;a href="http://www8.hp.com/uk/en/products/proliant-servers/product-detail.html?oid=5379860"&gt;HP Proliant Gen8 Microserver …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sun, 14 Aug 2016 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2016-08-14:/2016/configuring-my-windows-10-home-server/</guid></item><item><title>Redux Middleware</title><link>https://jonnyreeves.co.uk/2016/redux-middleware/</link><description>&lt;p&gt;This is a supporting post for the talk I am giving at &lt;a href="http://eventbrite.co.uk/e/the-new-shiny-javascript-development-in-2016-tickets-25196915653"&gt;Moo Tech Tuesday on the 31st May&lt;/a&gt; where I will be presenting an introduction to Redux Middleware &lt;a href="https://docs.google.com/a/jonnyreeves.co.uk/presentation/d/1I0s4uCWo7yEU3pLf4R5UjxiCqC3FhFJSSunWq0WAxZI/edit?usp=sharing"&gt;[slide deck]&lt;/a&gt; with advice on how to test it.  The supporting code can be found over on &lt;a href="https://github.com/jonnyreeves/redux-button-masher-example"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Redux describes itself …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 28 May 2016 20:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2016-05-28:/2016/redux-middleware/</guid></item><item><title>npm-shrinkwrap Sucks</title><link>https://jonnyreeves.co.uk/2016/npm-shrinkwrap-sucks/</link><description>&lt;p&gt;Despite suggesting that you should always &lt;a href="/2016/shrinkwrap-your-npm-dependencies"&gt;shrinkwrap your npm dependencies&lt;/a&gt;, I've come to the conclusion that npm-shrinkwrap not only sucks, but is fundamentally broken.  It doesn't quite suck as much as having your dependencies update underneath your feet, but it still sucks...&lt;/p&gt;
&lt;h2 id="adding-new-dependencies-is-a-pain"&gt;Adding new dependencies is a pain&lt;/h2&gt;
&lt;p&gt;Adding new …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Tue, 03 May 2016 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2016-05-03:/2016/npm-shrinkwrap-sucks/</guid></item><item><title>Integration Testing with Golden Masters</title><link>https://jonnyreeves.co.uk/2016/integration-testing-with-golden-masters/</link><description>&lt;p&gt;After watching &lt;a href="https://www.youtube.com/watch?v=yszygk1cpEc"&gt;Mitchell Hashimoto's talk on Advanced Testing with Go&lt;/a&gt; I was inspired to re-write one of my integration tests to use a golden master.  &lt;a href="http://blog.codeclimate.com/blog/2014/02/20/gold-master-testing/"&gt;Testing with golden masters&lt;/a&gt; is a simple concept which can be used to reduce the complexity of integration test cases whilst still ensuring that the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Mon, 18 Apr 2016 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2016-04-18:/2016/integration-testing-with-golden-masters/</guid></item><item><title>Simple Webpack Prod and Dev Config</title><link>https://jonnyreeves.co.uk/2016/simple-webpack-prod-and-dev-config/</link><description>&lt;p&gt;Webpack 2 is just around the corner with the &lt;a href="https://gist.github.com/sokra/27b24881210b56bbaff7#configuration"&gt;promise of easier command line configuration&lt;/a&gt;, however whilst we're stuck with webpack 1, here's an easy way to split you configuration between your development flow (with hot-module-reloading) and production (with minification).&lt;/p&gt;
&lt;p&gt;The trick revolves around the fact that webpack configuration can …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Mon, 29 Feb 2016 21:00:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2016-02-29:/2016/simple-webpack-prod-and-dev-config/</guid></item><item><title>Pre-commit Hooks in SmartGit</title><link>https://jonnyreeves.co.uk/2016/pre-commit-hooks-in-smartgit/</link><description>&lt;p&gt;SmartGit is my preferred Git client mainly due to its excellent visual diff tool that it ships with and the ability to easily manage several repositories.&lt;/p&gt;
&lt;p&gt;&lt;img alt="SmartGit diff tool" src="/images/precommit-hooks-in-smartgit/smartgit-screenshot.png"&gt;&lt;/p&gt;
&lt;p&gt;One small annoyance (aside from the lack of spell-check in commit messages...) is the way it doesn't inherit your user profile (and therefore your …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sun, 28 Feb 2016 14:00:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2016-02-28:/2016/pre-commit-hooks-in-smartgit/</guid></item><item><title>Testing Setting HTTP Cookies in Go</title><link>https://jonnyreeves.co.uk/2016/testing-setting-http-cookies-in-go/</link><description>&lt;p&gt;I found myself writing code that drops HTTP Cookies on a HTTP ResponseWriter
and had trouble figuring out how to test it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Preferences&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Colour&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;SetPreferencesCookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prefs&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;Preferences&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marshal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prefs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SetCookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Cookie …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Thu, 04 Feb 2016 20:00:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2016-02-04:/2016/testing-setting-http-cookies-in-go/</guid></item><item><title>Shrinkwrap your NPM Dependencies</title><link>https://jonnyreeves.co.uk/2016/shrinkwrap-your-npm-dependencies/</link><description>&lt;p&gt;Things move a little too quickly in the NPM ecosystem for my liking at times, modules updates can turn a working project into a broken build with a single &lt;code&gt;npm install&lt;/code&gt;; this is especially bad news if your &lt;a href="https://en.wikipedia.org/wiki/Continuous_integration"&gt;Continuous Integration&lt;/a&gt; server is pulling your NPM dependencies with each build.  Sometimes …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Mon, 04 Jan 2016 20:00:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2016-01-04:/2016/shrinkwrap-your-npm-dependencies/</guid></item><item><title>MySQL Getting Killed on Low-end VPS</title><link>https://jonnyreeves.co.uk/2015/mysql-getting-killed-on-low-end-vps/</link><description>&lt;p&gt;My wife's blog is powered by Wordpress running on a &lt;a href="https://www.bhost.net/"&gt;bHost Tiny VPS&lt;/a&gt; instance (1GB RAM) using a combination of MariaDB, Nginx and php-fpm.  Thanks to &lt;a href="https://en-gb.wordpress.org/plugins/wp-super-cache/"&gt;WP Super Cache&lt;/a&gt;; the site is pretty responsive.&lt;/p&gt;
&lt;p&gt;Things had been going pretty well for the last couple of months until she told me …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Fri, 11 Dec 2015 21:00:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-12-11:/2015/mysql-getting-killed-on-low-end-vps/</guid></item><item><title>Don't (always) npm install -g</title><link>https://jonnyreeves.co.uk/2015/dont-always-npm-install-g/</link><description>&lt;p&gt;Had a chat with a respected hacker friend of mine who did not know about this trick (although to be fair, I'm not sure I knew about it until all that long ago).&lt;/p&gt;
&lt;p&gt;There's almost never any need to use &lt;code&gt;npm install -g&lt;/code&gt;, you could argue it's an anti-pattern as …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Thu, 26 Nov 2015 21:00:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-11-26:/2015/dont-always-npm-install-g/</guid></item><item><title>Testing QueryStrings in http.Request</title><link>https://jonnyreeves.co.uk/2015/testing-querystrings-in-httprequest/</link><description>&lt;p&gt;This one threw me; say you have a subject that reads a value from an HTTP Request's Query, something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nx"&gt;ValidateState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fwdState&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;fwdState&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;expected&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Errorf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Unexpected state value: %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fwdState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In order to test …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 14 Nov 2015 13:00:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-11-14:/2015/testing-querystrings-in-httprequest/</guid></item><item><title>Live Reloading in Express</title><link>https://jonnyreeves.co.uk/2015/live-reloading-in-express/</link><description>&lt;p&gt;Gaffa tape time.  Getting iteration times down is important when building software, if nothing else it makes it more fun and help you keep the flow going.  With this in mind, let's get live reloading working with &lt;a href="https://github.com/janl/mustache.js/"&gt;Mustache templates&lt;/a&gt; on an &lt;a href="https://www.npmjs.com/package/express"&gt;express&lt;/a&gt;-based local development server.&lt;/p&gt;
&lt;p&gt;Let's start simple by …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 31 Oct 2015 21:00:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-10-31:/2015/live-reloading-in-express/</guid></item><item><title>Babel ❤ NPM</title><link>https://jonnyreeves.co.uk/2015/babel-npm/</link><description>&lt;p&gt;Once you go ES6, you never go back ;)  In order to create ES5-backwards-compatible modules, there's are a few nuances that you need to be aware of:&lt;/p&gt;
&lt;h3 id="babelify"&gt;babelify&lt;/h3&gt;
&lt;p&gt;Transpiling your NPM modules to ES5 with &lt;a href="https://babeljs.io/"&gt;babel&lt;/a&gt; will allow them to work in a wide variety of environments.  Add a &lt;code&gt;prepublish&lt;/code&gt; script …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 24 Oct 2015 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-10-24:/2015/babel-npm/</guid></item><item><title>Mocking XMLHttpRequests in Jasmine</title><link>https://jonnyreeves.co.uk/2015/mocking-xmlhttprequests-in-jasmine/</link><description>&lt;p&gt;When writing integration tests, it's often useful to fake network requests so your tests can be predictable and execute quickly.  Jasmine provides &lt;a href="https://github.com/jasmine/jasmine-ajax"&gt;&lt;code&gt;jasmine-ajax&lt;/code&gt;&lt;/a&gt; which will replace the &lt;code&gt;XMLHttpRequest&lt;/code&gt; constructor on the global (eg: &lt;code&gt;window&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Wiring up jasmine.Ajax into your test-suites' lifecycle is pretty straight forward:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jasmine-ajax&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;myTestSuite …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Mon, 19 Oct 2015 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-10-19:/2015/mocking-xmlhttprequests-in-jasmine/</guid></item><item><title>Single Page App Versioning</title><link>https://jonnyreeves.co.uk/2015/single-page-app-versioning/</link><description>&lt;p&gt;Versioning applications isn't quite as clear cut as &lt;a href="http://semver.org/"&gt;versioning libraries&lt;/a&gt;; individuals on teams will almost certainly fork the codebase to work on features (sometimes long-lived) but you will still want to provide an easy, and consistent way to refer to each build generated from your Continuous Integration system.&lt;/p&gt;
&lt;p&gt;My preferred …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 26 Sep 2015 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-09-26:/2015/single-page-app-versioning/</guid></item><item><title>Getting Proper Stack Traces with Mocha and TypeScript</title><link>https://jonnyreeves.co.uk/2015/getting-proper-stack-traces-with-mocha-and-typescript/</link><description>&lt;p&gt;Mocha and TypeScript are awesome when everything's working, but when you have a failing test something's not quite right:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$npm test

  Calculator
    #add
      1) should work


  0 passing (21ms)
  1 failing

  1) Calculator #add should work:

      AssertionError: expected 6 to equal 7
      + expected - actual

      -6
      +7

      at Context.&amp;lt;anonymous&amp;gt; (test …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Thu, 20 Aug 2015 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-08-20:/2015/getting-proper-stack-traces-with-mocha-and-typescript/</guid></item><item><title>Using Chai with TypeScript and Mocha</title><link>https://jonnyreeves.co.uk/2015/using-chai-with-typescript-and-mocha/</link><description>&lt;p&gt;Continuing my work on &lt;a href="/2015/injecting-into-constructors-with-typescript-decorators/"&gt;Decorator-drive dependency injection in Typescript&lt;/a&gt; I've overhauled the tests by replacing the manual assertions with &lt;a href="http://chaijs.com/"&gt;chai&lt;/a&gt;.  Chai provides a fluent api for writing descriptive assertions - there are a couple of different flavours, personally I feel the &lt;a href="http://chaijs.com/guide/styles/"&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt; style pairs well with TypeScript as I'm not a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Fri, 14 Aug 2015 07:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-08-14:/2015/using-chai-with-typescript-and-mocha/</guid></item><item><title>Injecting into Constructors with TypeScript Decorators</title><link>https://jonnyreeves.co.uk/2015/injecting-into-constructors-with-typescript-decorators/</link><description>&lt;p&gt;In the &lt;a href="/2015/injecting-into-methods-with-typescript-decorators/"&gt;previous post&lt;/a&gt; I added support for injecting into methods; this post provides the last missing InjectionPoint, constructor injection.  As with &lt;a href="http://pierrechamberlain.ca/blog/2011/04/custom_metadata/"&gt;AS3 Metadata&lt;/a&gt;, you can't annotate the &lt;code&gt;#constructor()&lt;/code&gt; method directly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// Although this would be the preferred syntax it will throw a compiler error,&lt;/span&gt;
  &lt;span class="c1"&gt;// TS1206: Decorators are not …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Thu, 06 Aug 2015 07:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-08-06:/2015/injecting-into-constructors-with-typescript-decorators/</guid></item><item><title>Injecting into Methods with TypeScript Decorators</title><link>https://jonnyreeves.co.uk/2015/injecting-into-methods-with-typescript-decorators/</link><description>&lt;p&gt;Expanding upon my &lt;a href="/2015/basic-typescript-dependency-injection-with-decorators/"&gt;last post on Property based Dependency Injection&lt;/a&gt;, let's have a look at what we need to do in order to inject into methods - here's what we want to achieve:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;_firstName&lt;/span&gt; : &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;_lastName&lt;/span&gt; : &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;@inject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;firstName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lastName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt; : &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt; : &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_firstName …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Mon, 03 Aug 2015 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-08-03:/2015/injecting-into-methods-with-typescript-decorators/</guid></item><item><title>Basic Typescript Dependency Injection with Decorators</title><link>https://jonnyreeves.co.uk/2015/basic-typescript-dependency-injection-with-decorators/</link><description>&lt;p&gt;Typescript 1.5 &lt;a href="https://github.com/Microsoft/TypeScript/wiki/What's-new-in-TypeScript#decorators"&gt;introduced decorators&lt;/a&gt; to the language which lets us experiment with &lt;a href="https://en.wikipedia.org/wiki/Metaprogramming"&gt;meta-programming&lt;/a&gt;. Metadata driven Dependency Injection frameworks allow you to write highly decoupled units which are easy to test and switch out between projects / frameworks.  Let's see how we can use decorators to get some simple property injection …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 01 Aug 2015 21:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-08-01:/2015/basic-typescript-dependency-injection-with-decorators/</guid></item><item><title>Hello Typescript and Mocha!</title><link>https://jonnyreeves.co.uk/2015/hello-typescript-and-mocha/</link><description>&lt;p&gt;Let's see what we can do with TypeScript then.  First things first we  need to create a local project to hack on:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ npm init
name: (hello-ts-mocha)
version: (1.0.0)
description: Getting started with TypeScript and mocha
entry point: (index.js)
test command: mocha
git repository:
keywords:
license: (ISC)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Mon, 27 Jul 2015 20:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2015-07-27:/2015/hello-typescript-and-mocha/</guid></item><item><title>Simple JavaScript Classes in CommonJS</title><link>https://jonnyreeves.co.uk/2014/simple-javascript-classes-in-commonjs/</link><description>&lt;p&gt;Having recently become an advocate of CommonJS modules and Browserify our team was looking for a simple way to define Plain old JavaScript Classes in our modules.  We've settled on the following style, making use of &lt;a href="https://github.com/justmoon/node-extend"&gt;extend&lt;/a&gt; and &lt;a href="https://github.com/isaacs/inherits"&gt;inherits&lt;/a&gt;; two tiny, focused CommonJS modules which will add a whopping 2kb …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 26 Jul 2014 18:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2014-07-26:/2014/simple-javascript-classes-in-commonjs/</guid></item><item><title>Using Browserify without a node_modules directory</title><link>https://jonnyreeves.co.uk/2014/using-browserify-without-a-node_modules-directory/</link><description>&lt;p&gt;NPM and Bower are pretty awesome; they provides both NodeJS and web developers a way to share CommonJS modules (aka packages) amongst code-bases without relying on copy/pasting concatenated .js files.  Browserify fills in the missing link for deploying an application to the web; it gathers up disparate CommonJS modules …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 19 Jul 2014 18:00:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2014-07-19:/2014/using-browserify-without-a-node_modules-directory/</guid></item><item><title>Making XHR Request to HTTPS domains with WinJS</title><link>https://jonnyreeves.co.uk/2013/making-xhr-request-to-https-domains-with-winjs/</link><description>&lt;p&gt;I recently came across an interesting caveat when working with WinJS (the JavaScript layer for creating Windows 8 Store applications). If you attempt to make an HTTP POST request to a server over the HTTPS protocol you may run into the following error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Network&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="mh"&gt;0x2ef3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Could&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;complete …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Fri, 25 Jan 2013 16:15:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2013-01-25:/2013/making-xhr-request-to-https-domains-with-winjs/</guid></item><item><title>Modular Javascript Unit Testing with QUnit and RequireJS</title><link>https://jonnyreeves.co.uk/2012/modular-javascript-unit-testing-with-qunit-and-requirejs/</link><description>&lt;p&gt;Modular application development is essential when working on a large project with more than a handful of developers. Breaking your code into separate modules improves code legibility and organization making it easier to locate logic and help create ‘seams’ in your code so you can do your best to adhere …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Tue, 14 Aug 2012 16:15:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2012-08-14:/2012/modular-javascript-unit-testing-with-qunit-and-requirejs/</guid></item><item><title>Listening for jQuery Mobile Slider Events</title><link>https://jonnyreeves.co.uk/2012/listening-for-jquery-mobile-slider-events/</link><description>&lt;p&gt;jQuery Mobile provides a neat little slider control; however, the version 1.1 release doesn’t behave very well and fails to dispatch the expected start and stop events triggered by jQuery UI’s slider control. &lt;a href="https://github.com/jquery/jquery-mobile/issues/1589"&gt;This issue (#1589)&lt;/a&gt; has been raised on jQuery Mobile’s GitHub Issue Tracker but …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Tue, 24 Jul 2012 16:15:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2012-07-24:/2012/listening-for-jquery-mobile-slider-events/</guid></item><item><title>Streaming Video from Azure Blob Storage</title><link>https://jonnyreeves.co.uk/2012/streaming-video-from-azure-blob-storage/</link><description>&lt;p&gt;By default Azure Blob Storage and Video do not mix well; the first hurdle that developers must get over is that the Content Type for the video must be set correctly (for .mp4 videos that’s usually &lt;code&gt;video/mp4&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The next problem that you’ll face is that the video …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Fri, 20 Jul 2012 16:15:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2012-07-20:/2012/streaming-video-from-azure-blob-storage/</guid></item><item><title>Stubbing JavaScript Promises with SinonJS</title><link>https://jonnyreeves.co.uk/2012/stubbing-javascript-promises-with-sinonjs/</link><description>&lt;p&gt;Asynchronous code lies at the heart of front end development; in order to make your application feel responsive you can’t afford to block execution until some external data has been read. &lt;a href="http://wiki.commonjs.org/wiki/Promises/A"&gt;Promises&lt;/a&gt; are a well understood design pattern to help encapsulate the state of an asynchronous action. A Promise …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 02 Jun 2012 16:15:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2012-06-02:/2012/stubbing-javascript-promises-with-sinonjs/</guid></item><item><title>jQuery - A single click handler for multiple buttons</title><link>https://jonnyreeves.co.uk/2012/jquery-a-single-click-handler-for-multiple-buttons/</link><description>&lt;p&gt;Event bubbling is a wonderful thing; in ActionScript mouse events would readily &lt;a href="http://www.rubenswieringa.com/blog/eventbubbles-eventcancelable-and-eventcurrenttarget"&gt;bubble up through the DisplayList&lt;/a&gt; all the way up to the Stage allowing you to add a single event Handler to a parent DisplayObject and then inspecting the &lt;code&gt;event.target&lt;/code&gt; property to determine which child button the user …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Wed, 23 May 2012 16:15:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2012-05-23:/2012/jquery-a-single-click-handler-for-multiple-buttons/</guid></item><item><title>Using External Templates with Mustache.js and jQuery</title><link>https://jonnyreeves.co.uk/2012/using-external-templates-with-mustachejs-and-jquery/</link><description>&lt;p&gt;&lt;a href="http://mustache.github.com/"&gt;Mustache&lt;/a&gt; is a language independent, logicless &lt;a href="http://en.wikipedia.org/wiki/Template_engine_(web)"&gt;templating engine&lt;/a&gt; which, in the context of a JavaScript / HTML5 style web application, means you can use it to separate your logic (javascript code) from your view (HTML Markup). Mustache comes in a variety of flavours; this article will be focusing on the &lt;a href="https://github.com/janl/mustache.js"&gt;JavaScript …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sun, 12 Feb 2012 16:15:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2012-02-12:/2012/using-external-templates-with-mustachejs-and-jquery/</guid></item><item><title>Getting Started with AS3 Vanilla</title><link>https://jonnyreeves.co.uk/2011/getting-started-with-as3-vanilla/</link><description>&lt;p&gt;A lot of people are excited about the news that Native JSON support is coming with &lt;a href="https://web.archive.org/web/20120104112810/http://www.bytearray.org/?p=3066"&gt;Flash Player 11&lt;/a&gt;; however, I’ve also seen a lot of people get a bit confused by what this actually means – if you were hoping that Flash would be able to magically convert your …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sun, 14 Aug 2011 16:15:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2011-08-14:/2011/getting-started-with-as3-vanilla/</guid></item><item><title>Maven and ANT – Managing Your Flash Project’s Build Dependencies</title><link>https://jonnyreeves.co.uk/2011/maven-and-ant-managing-your-flash-projects-build-dependencies/</link><description>&lt;p&gt;Project build dependency management and resolution is one of the more difficult problems you’ll face as your project grows in size; however even the smallest of projects (and teams) can benefit greatly from getting automatic dependency resolution in place.&lt;/p&gt;
&lt;h3 id="what-are-my-projects-build-dependencies"&gt;What Are My Project’s Build Dependencies?&lt;/h3&gt;
&lt;p&gt;Most of us …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Sat, 02 Apr 2011 16:15:00 +0100</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2011-04-02:/2011/maven-and-ant-managing-your-flash-projects-build-dependencies/</guid></item><item><title>Builder Pattern in ActionScript – Fluent Constructors</title><link>https://jonnyreeves.co.uk/2011/builder-pattern-in-actionscript-fluent-constructors/</link><description>&lt;p&gt;How many times have you come across a class which looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;nutrition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;NutritionFacts&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;_servingSize&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uint&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// (mL) required&lt;/span&gt;
        &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;_servings&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uint&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// (per container) required&lt;/span&gt;
        &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;_calories&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uint&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// optional&lt;/span&gt;
        &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;_fat&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uint&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;// (g) optional&lt;/span&gt;
        &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;_salt&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uint&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// (mg) optional&lt;/span&gt;
        &lt;span class="kd"&gt;private …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonny Reeves</dc:creator><pubDate>Fri, 25 Mar 2011 16:15:00 +0000</pubDate><guid isPermaLink="false">tag:jonnyreeves.co.uk,2011-03-25:/2011/builder-pattern-in-actionscript-fluent-constructors/</guid></item></channel></rss>